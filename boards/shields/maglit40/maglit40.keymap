#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&lt {
  quick-tap-ms = <180>;
  flavor = "tap-preferred";
};

&mt {
  quick-tap-ms = <180>;
  flavor = "tap-preferred";
};

/ {
    behaviors {
        mt2: require_prior_idle {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&mt LCTRL Q>, <&kp ESC>;
        };
        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&kp COMMA>, <&kp SEMI>;
        };
        td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&kp DOT>, <&kp COLON>;
        };
      };
  
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <25 35>;
            bindings = <&caps_word>;
        };
    };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &kp ESC        &kp Q     &kp W     &kp E     &kp R     &kp T       &kp Y     &kp U     &kp I     &kp O     &kp P            &kp BSPC 
        &mt2 LCTRL TAB &kp A     &kp S     &kp D     &kp F     &kp G       &kp H     &kp J     &kp K     &kp L     &mt2 RCTRL MINUS &kp RET
        &kp LSHFT      &kp Z     &kp X     &kp C     &kp V     &kp B       &kp N     &kp M     &td1      &td2      &mt2 RSHFT SLASH
                 &lt 4 BSLH   &mt LALT CAPS  &lt 3 SPACE  &mt LCMD DEL      &lt 1 RET  &lt 2 K_APP  &lt 4 UNDER 
      >;
		};

    first_layer {
      bindings = <
        &trans    &kp EXCL  &kp AT     &kp HASH  &kp DLLR  &kp PRCNT     &kp CARET   &kp AMPS     &kp ASTRK       &kp LPAR      &kp RPAR  &trans
        &trans    &kp N1    &kp N2     &kp N3    &kp N4    &kp N5        &kp N6      &kp N7       &kp N8          &kp N9        &kp N0    &trans
        &trans    &trans    &kp UNDER  &kp SLASH &kp COLON &kp EQUAL     &kp KP_PLUS &kp KP_MINUS &kp KP_MULTIPLY &kp KP_DIVIDE &trans
                 &trans       &trans         &trans       &trans         &trans       &trans       &trans
      >;
    };

    second_layer {
      bindings = <
        &trans     &trans    &kp INT3  &kp DQT   &kp SQT   &kp LBRC     &kp RBRC  &trans     &msc SCRL_UP   &mmv MOVE_UP   &msc SCRL_DOWN   &rgb_ug RGB_TOG
        &trans     &trans    &trans    &trans    &trans    &kp LBKT     &kp RBKT  &mkp LCLK  &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT  &mkp RCLK
        &trans     &trans    &trans    &trans    &trans    &kp LPAR     &kp RPAR  &trans     &mkp MCLK      &mkp MB4       &trans
                 &trans       &trans         &trans       &trans         &trans       &trans       &trans
      >;
    };

    third_layer {
      bindings = <
        &kp CAPS   &kp F1     &kp F2    &kp F3    &kp F4   &kp F5        &trans    &kp PG_UP  &kp UP      &kp PG_DN  &trans    &trans
        &trans     &kp F6     &kp F7    &kp F8    &kp F9   &kp F10       &kp HOME  &kp LEFT   &kp DOWN    &kp RIGHT  &kp BSPC  &trans
        &trans     &kp F11    &kp F12   &kp PSCRN &kp SLCK &kp LNLCK     &kp END   &trans     &kp LA(UP)  &kp SEMI   &kp SQT 
                 &trans       &trans         &trans       &trans          &trans       &trans       &trans
      >;
    };

    fourth_layer {
      bindings = <
        &bt BT_SEL 0 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &bt BT_SEL 5  &trans        &kp PSCRN  &trans  &trans  &trans  &trans  &studio_unlock
        &bt BT_NXT   &bt BT_PRV   &bt BT_CLR   &bt BT_CLR_ALL &trans        &trans        &trans     &trans  &trans  &trans  &trans  &trans
        &trans       &trans       &trans       &trans         &trans        &trans        &trans     &trans  &trans  &trans  &trans
                  &trans          &bootloader        &trans            &trans              &trans      &bootloader    &trans
      >;
    };

  };
};