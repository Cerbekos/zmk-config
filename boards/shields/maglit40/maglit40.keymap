#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

// OS設定を日本語キーボードのまま使用するための変換定義
#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

&led_strip {
    chain-length = <2>;
};

&lt {
  quick-tap-ms = <180>;
  flavor = "tap-preferred";
};

&mt {
  quick-tap-ms = <180>;
  flavor = "tap-preferred";
};

/ {
    behaviors {
        ht: my_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <180>;
            quick-tap-ms = <180>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
        td_QEC: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&mt LCTRL Q>, <&kp ESC>;
        };
        td_CS: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&kp COMMA>, <&kp SEMI>;
        };
        td_DC: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&kp DOT>, <&kp JP_COLON>;
        };
        td_CME: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&mt RCTRL MINUS>, <&kp JP_UNDERSCORE>;
        };  
    };
    
  keymap {
    compatible = "zmk,keymap";

    layer_0 {
      bindings = <
        &kp ESC        &td_QEC        &kp W         &kp E         &kp R         &kp T               &kp Y         &kp U         &kp I         &kp O         &kp P        &kp BSPC
        &mt LCTRL TAB  &kp A          &kp S         &kp D         &kp F         &kp G               &kp H         &kp J         &kp K         &kp L         &td_CME      &kp RET
        &kp LSHFT      &ht LSHFT Z    &kp X         &kp C         &kp V         &kp B               &kp N         &kp M         &td_CS        &td_DC        &ht RSHFT SLASH
                                 &kp LGUI    &mt LALT CAPS    &lt 1 SPACE   &lt 3 DEL               &lt 2 RET     &lt 4 K_APP   &mt RSHFT BSPC    
      >;
		};

    layer_1 {
      bindings = <
        &trans       &kp JP_PLUS      &kp MINUS     &kp JP_ASTERISK &kp SLASH   &kp JP_UNDERSCORE    &kp JP_EQUAL  &kp JP_COLON  &kp JP_YEN    &kp DOT       &kp JP_TILDE &trans
        &trans       &kp N1           &kp N2        &kp N3        &kp N4        &kp N5               &kp N6        &kp N7        &kp N8        &kp N9        &kp N0      &trans   
        &trans       &kp N6           &kp N7        &kp N8        &kp N9        &kp N0               &kp N1        &kp N2        &kp N3        &kp N4        &kp N5
                                      &trans        &trans        &trans        &mo 5                &trans        &trans        &trans
      >;
    };

    layer_2 {
      bindings = <
        &trans       &kp JP_CARET     &kp JP_YEN    &kp JP_AT     &kp JP_PLUS   &kp JP_PIPE          &trans        &kp PG_UP     &kp UP        &kp PG_DN     &trans     &trans
        &trans       &kp F1           &kp F2        &kp F3        &kp F4        &kp F5               &kp HOME      &kp LEFT      &kp DOWN      &kp RIGHT     &kp BSPC   &trans
        &trans       &kp F6           &kp F7        &kp F8        &kp F9        &kp F10              &kp END       &trans        &kp LA(UP)    &trans        &trans
                                      &trans        &trans        &trans        &trans               &trans        &mo 5         &trans
      >;
    };

    layer_3 {
      bindings = <
        &trans        &kp EXCL        &kp JP_DQUOTE &kp HASH      &kp DLLR      &kp PRCNT           &kp JP_AMPERSAND  &kp JP_QUOTE  &kp JP_LPAREN  &kp JP_RPAREN   &kp JP_CARET  &trans
        &trans        &trans          &trans        &trans        &trans        &trans              &kp JP_AT     &kp JP_BACKQUOTE  &kp JP_LBRACKET  &kp JP_LBRACE  &trans      &trans   
        &trans        &trans          &trans        &trans        &trans        &trans              &mkp JP_PLUS  &kp JP_RBRACKET   &kp JP_RBRACKET  &kp JP_RBRACE  &trans
                                      &trans        &trans        &mo 5         &trans              &trans        &trans          &trans
      >;
    };

    layer_4 {
      bindings = <
        &rgb_ug RGB_TOG &rgb_ug RGB_EFF &rgb_ug RGB_EFR &trans    &trans        &trans              &trans        &msc SCRL_UP    &mmv MOVE_UP   &msc SCRL_DOWN   &trans        &trans
        &trans      &trans            &trans        &trans        &trans        &trans              &mkp LCLK     &mmv MOVE_LEFT  &mmv MOVE_DOWN &mmv MOVE_RIGHT  &trans        &trans   
        &trans      &trans            &trans        &trans        &trans        &trans              &mkp RCLK     &trans          &mkp MCLK      &trans           &trans
                                      &trans        &trans        &trans        &trans              &mo 5         &trans          &trans
      >;
    };

    layer_5 {
      bindings = <
        &trans      &bt BT_SEL 0      &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans
        &trans      &trans            &trans        &trans        &bt BT_CLR    &bt BT_CLR_ALL      &bt BT_CLR_ALL &bt BT_CLR   &trans        &trans        &trans        &trans
        &bootloader &trans            &trans        &trans        &trans        &trans              &trans        &trans        &trans        &trans        &bootloader
                                      &trans        &trans        &trans        &trans              &trans        &trans        &trans
      >;
    };
  };
};