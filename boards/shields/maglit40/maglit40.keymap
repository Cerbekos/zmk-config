#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

// OS設定を日本語キーボードのまま使用するための変換定義
#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

&led_strip {
    chain-length = <1>;
};

&lt {
  quick-tap-ms = <180>;
  flavor = "tap-preferred";
};

&mt {
  quick-tap-ms = <180>;
  flavor = "tap-preferred";
};

/ {
    behaviors {
        ht: my_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <180>;
            quick-tap-ms = <180>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
        td_QEC: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&mt LCTRL Q>, <&kp ESC>;
        };
        td_CS: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&kp COMMA>, <&kp SEMI>;
        };
        td_DC: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&kp DOT>, <&kp COLON>;
        };
        td_CME: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&mt RCTRL MINUS>, <&kp EQUAL>;
        };  
    };
    
  keymap {
    compatible = "zmk,keymap";

    0_default_layer {
      bindings = <
        &kp ESC        &td_QEC         &kp W         &kp E         &kp R         &kp T              &kp Y         &kp U         &kp I         &kp O         &kp P             &kp BSPC
        &mt LCTRL TAB  &kp A           &kp S         &kp D         &kp F         &kp G              &kp H         &kp J         &kp K         &kp L         &td_CME           &kp RET
        &kp LSHFT      &ht LSHFT Z     &kp X         &kp C         &kp V         &kp B              &kp N         &kp M         &td_CS        &td_DC        &ht RSHFT SLASH
                              &trans  &lt 1 CAPS    &lt 2 SPACE   &mt LCTL DEL                      &mt RSHFT BSPC    &lt 3 RET   &lt 4 K_APP
      >;
		};

    1_function_layer {
      bindings = <
        &trans    &kp F1          &kp F2        &kp F3        &kp F4        &kp F5                  &trans       &msc SCRL_UP   &mmv MOVE_UP   &msc SCRL_DOWN   &trans &trans
        &trans    &kp F6          &kp F7        &kp F8        &kp F9        &kp F10                 &trans       &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT  &trans &trans   
        &trans    &trans          &trans        &trans        &trans        &trans                  &trans       &mkp LCLK      &mkp MCLK      &mkp RCLK        &trans
                                      &trans        &mo 5         &trans                            &trans       &trans         &trans
      >;
    };

    2_numbers_layer {
      bindings = <
        &trans    &kp KP_N1       &kp KP_N2     &kp KP_N3     &kp KP_N4     &kp KP_N5               &kp N1        &kp N2        &kp N3        &kp N4        &kp N5 &trans
        &trans    &kp KP_N6       &kp KP_N7     &kp KP_N8     &kp KP_N9     &kp KP_N0               &kp N6        &kp N7        &kp N8        &kp N9        &kp N0 &trans   
        &trans    &kp KP_EQUAL    &kp KP_PLUS   &kp KP_MINUS  &kp KP_ASTERISK   &kp KP_SLASH        &kp EQUAL     &kp PLUS      &kp MINUS     &kp ASTRK     &kp SLASH
                           &trans    &trans        &trans        &mo 5                              &trans        &trans        &trans
      >;
    };

    3_navigation_layer {
      bindings = <
        &trans    &trans          &kp PG_UP     &kp UP        &kp PG_UP     &kp LC(T)               &trans        &kp PG_UP     &kp UP        &kp PG_DN     &trans &trans
        &trans    &trans          &kp LEFT      &kp DOWN      &kp RIGHT     &kp END                 &trans        &kp LEFT      &kp DOWN      &kp RIGHT     &trans &trans
        &trans    &trans          &kp HOME      &kp LA(UP)    &kp END       &trans                  &trans        &kp HOME      &kp LA(UP)    &kp END       &trans
                           &trans     &trans        &trans        &trans                            &mo 5         &trans        &trans
      >;
    };

    4_symbols_layer {
      bindings = <
      &trans    &kp EXCL        &kp AT        &kp HASH      &kp DLLR      &kp PRCNT                 &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT &trans
      &trans    &kp CARET       &kp AMPS      &kp ASTRK     &kp LPAR      &kp RPAR                  &kp CARET     &kp AMPS      &kp ASTRK     &kp LPAR      &kp RPAR  &trans    
      &trans    &trans          &trans        &trans        &trans        &trans                    &trans        &trans        &trans        &trans        &trans
                           &trans     &trans        &trans        &trans                            &trans        &mo 5         &trans
      >;
    };

    5_bluetooth_layer {
      bindings = <
        &trans    &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans
        &trans    &trans          &trans        &trans        &trans        &bt BT_CLR              &bt BT_CLR        &trans        &trans        &trans        &trans        &trans
        &trans    &trans          &trans        &trans        &trans        &bootloader             &bootloader        &trans        &trans        &trans        &trans
                           &trans     &trans        &trans        &trans                            &trans        &trans        &trans
      >;
    };
  };
};