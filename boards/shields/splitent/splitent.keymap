#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
  quick-tap-ms = <180>;
  flavor = "tap-preferred";
};

&mt {
  quick-tap-ms = <180>;
  flavor = "tap-preferred";
};

/ {
    behaviors {
        rpi: require_prior_idle {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&mt LCTRL Q>, <&kp ESC>;
        };
        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&kp COMMA>, <&kp SEMI>;
        };
        td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&kp DOT>, <&kp COLON>;
        };
      };
  
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <21 30>;
            bindings = <&caps_word>;
        };
    };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &td0          &kp W    &kp E    &kp R    &kp T             &kp Y    &kp U    &kp I     &kp O   &kp P    
        &kp A         &kp S    &kp D    &kp F    &kp G             &kp H    &kp J    &kp K     &kp L   &rpi RCTRL MINUS 
        &rpi LSHIFT Z &kp X    &kp C    &kp V    &kp B             &kp N    &kp M    &td1      &td2    &rpi RSHIFT SLASH
              &mt LALT CAPS  &lt 3 SPACE  &mt LCMD DEL             &lt 2 BSPC  &lt 1 RET  &lt 4 TAB
      >;
		};

    first_layer {
      bindings = <
        &kp EXCL &kp AT  &kp HASH      &kp DLLR     &kp PRCNT      &kp CARET    &kp AMPS     &kp ASTRK       &kp LPAR      &kp RPAR
        &kp N1   &kp N2  &kp N3        &kp N4       &kp N5         &kp N6       &kp N7       &kp N8          &kp N9        &kp N0
        &trans   &trans  &kp LS(MINUS) &kp LS(SEMI) &kp EQUAL      &kp KP_PLUS  &kp KP_MINUS &kp KP_MULTIPLY &kp KP_DIVIDE &trans
                         &trans        &trans       &trans         &trans       &trans       &trans
      >;
    };

    second_layer {
      bindings = <
        &trans      &trans    &trans    &trans    &kp LBRC         &kp RBRC  &msc SCRL_UP   &mmv MOVE_UP   &msc SCRL_DOWN   &kp INT3
        &trans      &trans    &trans    &trans    &kp LBKT         &kp RBKT  &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT  &trans
        &kp LSHIFT  &kp CAPS  &trans    &trans    &trans           &mkp MB4  &mkp LCLK      &mkp MCLK      &mkp RCLK        &mkp MB5
                              &trans    &trans    &caps_word       &trans    &trans         &trans
      >;
    };

    third_layer {
      bindings = <
        &kp F1     &kp F2    &kp F3    &kp F4   &kp F5             &trans   &kp PG_UP &kp UP     &kp PG_DN &trans
        &kp F6     &kp F7    &kp F8    &kp F9   &kp F10            &kp HOME &kp LEFT  &kp DOWN   &kp RIGHT &kp BSPC
        &kp LSHIFT &kp F11   &kp PSCRN &kp SLCK &kp LNLCK          &kp END  &trans    &kp LA(UP) &kp SEMI  &kp SQT
                          &bootloader  &trans   &trans             &trans   &trans    &trans
      >;
    };

    fourth_layer {
      bindings = <
        &bt BT_SEL 0 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &bt BT_SEL 5      &kp PSCRN  &trans       &trans  &trans  &trans
        &bt BT_NXT   &bt BT_PRV   &bt BT_CLR   &bt BT_CLR_ALL &trans            &trans     &trans       &trans  &trans  &trans
        &trans       &trans       &trans       &trans         &trans            &trans     &trans       &trans  &trans  &trans
                                  &trans       &bootloader    &trans            &trans     &bootloader  &trans
      >;
    };

  };
};